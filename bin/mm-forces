#!/usr/bin/env python

import os
import sys
import numpy as np
from simtk import unit
from simtk import openmm as mm
from simtk.openmm import app

if len(sys.argv) != 4:
    print >> sys.stderr, 'usage %s gro_fn, top_fn force_fn' % sys.argv[0]
    exit(1)
_, gro_fn, top_fn, force_fn = sys.argv

gro = app.GromacsGroFile(gro_fn)

top = app.GromacsTopFile(top_fn, unitCellDimensions=gro.getUnitCellDimensions(),
                         defines={'FLEXIBLE': True, 'CHARMM_TIP3P': True},
                         includeDir=os.path.join(os.environ['GMXDATA'], 'top'))

system = top.createSystem(nonbondedMethod=app.PME,
                          nonbondedCutoff=20*unit.angstroms,
                          constraints=None)
context = mm.Context(system, mm.VerletIntegrator(0))

context.setPositions(gro.positions)
state = context.getState(getForces=True)
forces = state.getForces(asNumpy=True).value_in_unit(unit.kilojoule_per_mole/unit.nanometers)

np.savetxt(force_fn, forces)
